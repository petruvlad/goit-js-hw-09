{"mappings":"AAAAA,SAASC,iBAAiB,oBAAoB,WAC5C,IAAMC,EAAcF,SAASG,cAAc,SAkB3C,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAzBPJ,EAAYD,iBAAiB,UAAU,SAAUa,GAC/CA,EAAMC,iBAEN,IAAMT,EAAQU,SAASd,EAAYe,SAASX,MAAMY,MAAO,IACnDC,EAAOH,SAASd,EAAYe,SAASE,KAAKD,MAAO,KAyBzD,SAAwBE,EAAQC,EAAcF,GAG5C,IAFA,IAAMG,EAAW,GAERC,EAAI,EAAGA,GAAKH,EAAQG,IAAK,CAChC,IAAMC,EAAWD,EACXE,EAAeJ,GAAgBE,EAAI,GAAKJ,EAE9CG,EAASI,KACPtB,EAAcoB,EAAUC,GACrBE,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,QAAQC,IAAI,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAE3D0B,OAAM,SAAAJ,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,QAAQC,IAAI,sBAAuCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,KAKjE,OAAOC,QAAQ0B,IAAIX,E,EAxCnBY,CAFelB,SAASd,EAAYe,SAASG,OAAOF,MAAO,IAEpCZ,EAAOa,GAC3BQ,MAAK,WACJE,QAAQC,IAAI,sC,IAEbE,OAAM,WACLH,QAAQM,MAAM,oC,UAsCtBnC,SAASC,iBAAiB,oBAAoB,WAC5C,IAAMC,EAAcF,SAASG,cAAc,SAkB3C,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAzBPJ,EAAYD,iBAAiB,UAAU,SAAUa,GAC/CA,EAAMC,iBAEN,IAAMT,EAAQU,SAASd,EAAYe,SAASX,MAAMY,MAAO,IACnDC,EAAOH,SAASd,EAAYe,SAASE,KAAKD,MAAO,KAyBzD,SAAwBE,EAAQC,EAAcF,GAG5C,IAFA,IAAMG,EAAW,GAERC,EAAI,EAAGA,GAAKH,EAAQG,IAAK,CAChC,IAAMa,EAAWb,EACXE,EAAeJ,GAAgBE,EAAI,GAAKJ,EAE9CG,EAASI,KACPtB,EAAcgC,EAAUX,GACrBE,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,QAAQC,IAAI,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAE3D0B,OAAM,SAAAJ,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,QAAQC,IAAI,sBAAqCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,KAK/D,OAAOC,QAAQ0B,IAAIX,E,EAxCnBY,CAFelB,SAASd,EAAYe,SAASG,OAAOF,MAAO,IAEpCZ,EAAOa,GAC3BQ,MAAK,WACJE,QAAQC,IAAI,sC,IAEbE,OAAM,WACLH,QAAQM,MAAM,oC","sources":["src/js/03-promises.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\n  const promiseForm = document.querySelector('.form');\n\n  promiseForm.addEventListener('submit', function (event) {\n    event.preventDefault();\n    \n    const delay = parseInt(promiseForm.elements.delay.value, 10);\n    const step = parseInt(promiseForm.elements.step.value, 10);\n    const amount = parseInt(promiseForm.elements.amount.value, 10);\n\n    createPromises(amount, delay, step)\n      .then(() => {\n        console.log('All promises fulfilled successfully');\n      })\n      .catch(() => {\n        console.error('At least one promise was rejected');\n      });\n  });\n\n  function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n\n  function createPromises(amount, initialDelay, step) {\n    const promises = [];\n\n    for (let i = 1; i <= amount; i++) {\n      const position = i;\n      const promiseDelay = initialDelay + (i - 1) * step;\n\n      promises.push(\n        createPromise(position, promiseDelay)\n          .then(({ position, delay }) => {\n            console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          })\n          .catch(({ position, delay }) => {\n            console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n          })\n      );\n    }\n\n    return Promise.all(promises);\n  }\n});\ndocument.addEventListener('DOMContentLoaded', function () {\n  const promiseForm = document.querySelector('.form');\n\n  promiseForm.addEventListener('submit', function (event) {\n    event.preventDefault();\n\n    const delay = parseInt(promiseForm.elements.delay.value, 10);\n    const step = parseInt(promiseForm.elements.step.value, 10);\n    const amount = parseInt(promiseForm.elements.amount.value, 10);\n\n    createPromises(amount, delay, step)\n      .then(() => {\n        console.log('All promises fulfilled successfully');\n      })\n      .catch(() => {\n        console.error('At least one promise was rejected');\n      });\n  });\n\n  function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n\n  function createPromises(amount, initialDelay, step) {\n    const promises = [];\n\n    for (let i = 1; i <= amount; i++) {\n      const position = i;\n      const promiseDelay = initialDelay + (i - 1) * step;\n\n      promises.push(\n        createPromise(position, promiseDelay)\n          .then(({ position, delay }) => {\n            console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          })\n          .catch(({ position, delay }) => {\n            console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n          })\n      );\n    }\n\n    return Promise.all(promises);\n  }\n});\n\n"],"names":["document","addEventListener","promiseForm","querySelector","createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","event","preventDefault","parseInt","elements","value","step","amount","initialDelay","promises","i","position1","promiseDelay","push","then","param","console","log","concat","catch","all","createPromises","error","position3"],"version":3,"file":"03-promises.9131ccff.js.map"}